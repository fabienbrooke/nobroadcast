{"ts":1365473563538,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1365473588792,"patch":[[{"diffs":[[1,"jQuery(document).ready(function($) {\n\n  // declare object for video\n\tvar player = new MediaElementPlayer('#player1');\n\n});"]],"start1":0,"start2":0,"length1":0,"length2":122}]],"length":122,"saved":false}
{"ts":1365473597903,"patch":[[{"diffs":[[0,"r('#"],[-1,"play"],[1,"teas"],[0,"er"],[-1,"1"],[0,"');\n"]],"start1":103,"start2":103,"length1":15,"length2":14}]],"length":121,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365478606398,"patch":[[{"diffs":[[0,"deo\n"],[-1,"\t"],[1,"  "],[0,"var "]],"start1":64,"start2":64,"length1":9,"length2":10},{"diffs":[[0,"r('#"],[-1,"teaser'"],[1,"player',/* Options */"],[0,");\n\n"]],"start1":104,"start2":104,"length1":15,"length2":29}]],"length":136,"saved":false}
{"ts":1365478609474,"patch":[[{"diffs":[[0,"layer('#"],[-1,"play"],[1,"teas"],[0,"er',/* O"]],"start1":100,"start2":100,"length1":20,"length2":20}]],"length":136,"saved":false}
{"ts":1365478616167,"patch":[[{"diffs":[[0,"ons */);"],[1,"\n  player.play();"],[0,"\n\n});"]],"start1":123,"start2":123,"length1":13,"length2":30}]],"length":153,"saved":false}
{"ts":1365478640622,"patch":[[{"diffs":[[0,"ser'"],[-1,",/* Options */"],[0,");\n "]],"start1":111,"start2":111,"length1":22,"length2":8}]],"length":139,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365478703275,"patch":[[{"diffs":[[0,"o\n  "],[-1,"var player = new M"],[1,"$('video').m"],[0,"edia"],[-1,"E"],[1,"e"],[0,"lement"],[-1,"P"],[1,"p"],[0,"layer("],[-1,"'#teaser');\n  player.play("],[1,"/* Options */"],[0,");\n\n"]],"start1":66,"start2":66,"length1":70,"length2":51}]],"length":120,"saved":false}
{"ts":1365478847200,"patch":[[{"diffs":[[0,"{\n\n "],[-1," // declare object for video\n  $('video').mediaelementplayer(/* Options */"],[1,"new MediaElement('#teaser', {\n    // shows debug errors on screen\n    enablePluginDebug: false,\n    // remove or reorder to change plugin priority\n    plugins: ['flash','silverlight'],\n    // specify to force MediaElement to use a particular video or audio type\n    type: '',\n    // path to Flash and Silverlight plugins\n    pluginPath: '/myjsfiles/',\n    // name of flash file\n    flashName: 'flashmediaelement.swf',\n    // name of silverlight file\n    silverlightName: 'silverlightmediaelement.xap',\n    // default if the <video width> is not specified\n    defaultVideoWidth: 480,\n    // default if the <video height> is not specified     \n    defaultVideoHeight: 270,\n    // overrides <video width>\n    pluginWidth: -1,\n    // overrides <video height>       \n    pluginHeight: -1,\n    // rate in milliseconds for Flash and Silverlight to fire the timeupdate event\n    // larger number is less accurate, but less strain on plugin->JavaScript bridge\n    timerRate: 250,\n    // method that fires when the Flash or Silverlight object is ready\n    success: function (mediaElement, domObject) { \n         \n        // add event listener\n        mediaElement.addEventListener('timeupdate', function(e) {\n             \n            document.getElementById('current-time').innerHTML = mediaElement.currentTime;\n             \n        }, false);\n         \n        // call the play method\n        mediaElement.play();\n         \n    },\n    // fires when a problem is detected\n    error: function () { \n    \n    }\n  }"],[0,");\n\n"]],"start1":35,"start2":35,"length1":82,"length2":1512}]],"length":1550,"saved":false}
{"ts":1365478866325,"patch":[[{"diffs":[[0,"nt('"],[-1,"#"],[0,"teas"]],"start1":53,"start2":53,"length1":9,"length2":8}]],"length":1549,"saved":false}
{"ts":1365478884231,"patch":[[{"diffs":[[0,"lement('"],[1,"#"],[0,"teaser',"]],"start1":49,"start2":49,"length1":16,"length2":17}]],"length":1550,"saved":false}
{"ts":1365479026294,"patch":[[{"diffs":[[0," {\n\n"],[-1," new MediaElement('#teaser', {\n    // shows debug errors on screen\n    enablePluginDebug: false,\n    // remove or reorder to change plugin priority\n    plugins: ['flash','silverlight'],\n    // specify to force MediaElement to use a particular video or audio type\n    type: '',\n    // path to Flash and Silverlight plugins\n    pluginPath: '/myjsfiles/',\n    // name of flash file\n    flashName: 'flashmediaelement.swf',\n    // name of silverlight file\n    silverlightName: 'silverlightmediaelement.xap',\n    // default if the <video width> is not specified\n    defaultVideoWidth: 480,\n    // default if the <video height> is not specified     \n    defaultVideoHeight: 270,\n    // overrides <video width>\n    pluginWidth: -1,\n    // overrides <video height>       \n    pluginHeight: -1,\n    // rate in milliseconds for Flash and Silverlight to fire the timeupdate event\n    // larger number is less accurate, but less strain on plugin->JavaScript bridge\n    timerRate: 250,\n    // method that fires when the Flash or Silverlight object is ready\n    success: function (mediaElement, domObject) { \n         \n        // add event listener\n        mediaElement.addEventListener('timeupdate', function(e) {\n             \n            document.getElementById('current-time').innerHTML = mediaElement.currentTime;\n             \n        }, false);\n         \n        // call the play method\n        mediaElement.play();\n         \n    },\n    // fires when a problem is detected\n    error: function () { \n    \n    }\n  });\n\n"],[0,"});"]],"start1":34,"start2":34,"length1":1516,"length2":7}]],"length":41,"saved":false}
